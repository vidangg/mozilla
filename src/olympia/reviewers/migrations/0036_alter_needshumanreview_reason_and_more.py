# Generated by Django 4.2.14 on 2024-07-30 10:17

from django.db import migrations, models


def delete_empty_review_action_reasons(apps, schema_editor):
    ReviewActionReason = apps.get_model('reviewers', 'ReviewActionReason')
    ReviewActionReason.objects.filter(canned_response='', canned_block_reason='').delete()


class Migration(migrations.Migration):

    dependencies = [
        ('reviewers', '0035_alter_reviewactionreason_cinder_policy'),
    ]

    operations = [
        migrations.RunPython(delete_empty_review_action_reasons),
        migrations.AlterField(
            model_name='needshumanreview',
            name='reason',
            field=models.SmallIntegerField(choices=[(0, 'Unknown'), (1, 'Hit scanner rule'), (2, 'Belongs to a promoted group'), (3, 'Over growth threshold for usage tier'), (4, 'Previous version in channel had needs human review set'), (5, 'Sources provided while pending rejection'), (6, 'Developer replied'), (7, 'Manually set as needing human review by a reviewer'), (8, 'Auto-approved but still had an approval delay set in the past'), (9, 'Over abuse reports threshold for usage tier'), (10, 'Escalated for an abuse report, via cinder'), (11, 'Reported for abuse within the add-on'), (12, "Appeal of a reviewer's decision about a policy violation")], default=0, editable=False),
        ),
        migrations.AddConstraint(
            model_name='reviewactionreason',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('canned_response', ''), _negated=True), models.Q(('canned_block_reason', ''), _negated=True), _connector='OR'), name='either_canned_response_or_canned_block_reason_must_be_set'),
        ),
    ]
